// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: helloworld.proto

#ifndef PROTOBUF_helloworld_2eproto__INCLUDED
#define PROTOBUF_helloworld_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace helloworld {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_helloworld_2eproto();
void protobuf_AssignDesc_helloworld_2eproto();
void protobuf_ShutdownFile_helloworld_2eproto();

class HelloDir;
class HelloDirent;
class HelloFlushRequest;
class HelloMkdirReply;
class HelloMknodRequest;
class HelloOpendir;
class HelloReply;
class HelloRequest;
class HelloStat;

// ===================================================================

class HelloRequest : public ::google::protobuf::Message {
 public:
  HelloRequest();
  virtual ~HelloRequest();

  HelloRequest(const HelloRequest& from);

  inline HelloRequest& operator=(const HelloRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HelloRequest& default_instance();

  void Swap(HelloRequest* other);

  // implements Message ----------------------------------------------

  inline HelloRequest* New() const { return New(NULL); }

  HelloRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HelloRequest& from);
  void MergeFrom(const HelloRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HelloRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:helloworld.HelloRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_helloworld_2eproto();
  friend void protobuf_AssignDesc_helloworld_2eproto();
  friend void protobuf_ShutdownFile_helloworld_2eproto();

  void InitAsDefaultInstance();
  static HelloRequest* default_instance_;
};
// -------------------------------------------------------------------

class HelloReply : public ::google::protobuf::Message {
 public:
  HelloReply();
  virtual ~HelloReply();

  HelloReply(const HelloReply& from);

  inline HelloReply& operator=(const HelloReply& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HelloReply& default_instance();

  void Swap(HelloReply* other);

  // implements Message ----------------------------------------------

  inline HelloReply* New() const { return New(NULL); }

  HelloReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HelloReply& from);
  void MergeFrom(const HelloReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HelloReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string message = 1;
  void clear_message();
  static const int kMessageFieldNumber = 1;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:helloworld.HelloReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_helloworld_2eproto();
  friend void protobuf_AssignDesc_helloworld_2eproto();
  friend void protobuf_ShutdownFile_helloworld_2eproto();

  void InitAsDefaultInstance();
  static HelloReply* default_instance_;
};
// -------------------------------------------------------------------

class HelloFlushRequest : public ::google::protobuf::Message {
 public:
  HelloFlushRequest();
  virtual ~HelloFlushRequest();

  HelloFlushRequest(const HelloFlushRequest& from);

  inline HelloFlushRequest& operator=(const HelloFlushRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HelloFlushRequest& default_instance();

  void Swap(HelloFlushRequest* other);

  // implements Message ----------------------------------------------

  inline HelloFlushRequest* New() const { return New(NULL); }

  HelloFlushRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HelloFlushRequest& from);
  void MergeFrom(const HelloFlushRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HelloFlushRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // optional string content = 2;
  void clear_content();
  static const int kContentFieldNumber = 2;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // @@protoc_insertion_point(class_scope:helloworld.HelloFlushRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_helloworld_2eproto();
  friend void protobuf_AssignDesc_helloworld_2eproto();
  friend void protobuf_ShutdownFile_helloworld_2eproto();

  void InitAsDefaultInstance();
  static HelloFlushRequest* default_instance_;
};
// -------------------------------------------------------------------

class HelloStat : public ::google::protobuf::Message {
 public:
  HelloStat();
  virtual ~HelloStat();

  HelloStat(const HelloStat& from);

  inline HelloStat& operator=(const HelloStat& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HelloStat& default_instance();

  void Swap(HelloStat* other);

  // implements Message ----------------------------------------------

  inline HelloStat* New() const { return New(NULL); }

  HelloStat* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HelloStat& from);
  void MergeFrom(const HelloStat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HelloStat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sfixed64 dev = 1;
  void clear_dev();
  static const int kDevFieldNumber = 1;
  ::google::protobuf::int64 dev() const;
  void set_dev(::google::protobuf::int64 value);

  // optional sfixed64 ino = 2;
  void clear_ino();
  static const int kInoFieldNumber = 2;
  ::google::protobuf::int64 ino() const;
  void set_ino(::google::protobuf::int64 value);

  // optional int32 mode = 3;
  void clear_mode();
  static const int kModeFieldNumber = 3;
  ::google::protobuf::int32 mode() const;
  void set_mode(::google::protobuf::int32 value);

  // optional sfixed64 nlink = 4;
  void clear_nlink();
  static const int kNlinkFieldNumber = 4;
  ::google::protobuf::int64 nlink() const;
  void set_nlink(::google::protobuf::int64 value);

  // optional int32 uid = 5;
  void clear_uid();
  static const int kUidFieldNumber = 5;
  ::google::protobuf::int32 uid() const;
  void set_uid(::google::protobuf::int32 value);

  // optional int32 gid = 6;
  void clear_gid();
  static const int kGidFieldNumber = 6;
  ::google::protobuf::int32 gid() const;
  void set_gid(::google::protobuf::int32 value);

  // optional sfixed64 rdev = 7;
  void clear_rdev();
  static const int kRdevFieldNumber = 7;
  ::google::protobuf::int64 rdev() const;
  void set_rdev(::google::protobuf::int64 value);

  // optional sfixed64 size = 8;
  void clear_size();
  static const int kSizeFieldNumber = 8;
  ::google::protobuf::int64 size() const;
  void set_size(::google::protobuf::int64 value);

  // optional sfixed64 atime = 9;
  void clear_atime();
  static const int kAtimeFieldNumber = 9;
  ::google::protobuf::int64 atime() const;
  void set_atime(::google::protobuf::int64 value);

  // optional sfixed64 mtime = 10;
  void clear_mtime();
  static const int kMtimeFieldNumber = 10;
  ::google::protobuf::int64 mtime() const;
  void set_mtime(::google::protobuf::int64 value);

  // optional sfixed64 ctime = 11;
  void clear_ctime();
  static const int kCtimeFieldNumber = 11;
  ::google::protobuf::int64 ctime() const;
  void set_ctime(::google::protobuf::int64 value);

  // optional sfixed64 blksize = 12;
  void clear_blksize();
  static const int kBlksizeFieldNumber = 12;
  ::google::protobuf::int64 blksize() const;
  void set_blksize(::google::protobuf::int64 value);

  // optional sfixed64 blocks = 13;
  void clear_blocks();
  static const int kBlocksFieldNumber = 13;
  ::google::protobuf::int64 blocks() const;
  void set_blocks(::google::protobuf::int64 value);

  // optional uint32 flag = 14;
  void clear_flag();
  static const int kFlagFieldNumber = 14;
  ::google::protobuf::uint32 flag() const;
  void set_flag(::google::protobuf::uint32 value);

  // optional uint32 err = 15;
  void clear_err();
  static const int kErrFieldNumber = 15;
  ::google::protobuf::uint32 err() const;
  void set_err(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:helloworld.HelloStat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 dev_;
  ::google::protobuf::int64 ino_;
  ::google::protobuf::int64 nlink_;
  ::google::protobuf::int32 mode_;
  ::google::protobuf::int32 uid_;
  ::google::protobuf::int64 rdev_;
  ::google::protobuf::int64 size_;
  ::google::protobuf::int64 atime_;
  ::google::protobuf::int64 mtime_;
  ::google::protobuf::int32 gid_;
  ::google::protobuf::uint32 flag_;
  ::google::protobuf::int64 ctime_;
  ::google::protobuf::int64 blksize_;
  ::google::protobuf::int64 blocks_;
  ::google::protobuf::uint32 err_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_helloworld_2eproto();
  friend void protobuf_AssignDesc_helloworld_2eproto();
  friend void protobuf_ShutdownFile_helloworld_2eproto();

  void InitAsDefaultInstance();
  static HelloStat* default_instance_;
};
// -------------------------------------------------------------------

class HelloDir : public ::google::protobuf::Message {
 public:
  HelloDir();
  virtual ~HelloDir();

  HelloDir(const HelloDir& from);

  inline HelloDir& operator=(const HelloDir& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HelloDir& default_instance();

  void Swap(HelloDir* other);

  // implements Message ----------------------------------------------

  inline HelloDir* New() const { return New(NULL); }

  HelloDir* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HelloDir& from);
  void MergeFrom(const HelloDir& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HelloDir* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 fh = 1;
  void clear_fh();
  static const int kFhFieldNumber = 1;
  ::google::protobuf::uint64 fh() const;
  void set_fh(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:helloworld.HelloDir)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 fh_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_helloworld_2eproto();
  friend void protobuf_AssignDesc_helloworld_2eproto();
  friend void protobuf_ShutdownFile_helloworld_2eproto();

  void InitAsDefaultInstance();
  static HelloDir* default_instance_;
};
// -------------------------------------------------------------------

class HelloOpendir : public ::google::protobuf::Message {
 public:
  HelloOpendir();
  virtual ~HelloOpendir();

  HelloOpendir(const HelloOpendir& from);

  inline HelloOpendir& operator=(const HelloOpendir& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HelloOpendir& default_instance();

  void Swap(HelloOpendir* other);

  // implements Message ----------------------------------------------

  inline HelloOpendir* New() const { return New(NULL); }

  HelloOpendir* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HelloOpendir& from);
  void MergeFrom(const HelloOpendir& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HelloOpendir* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 dir = 1;
  void clear_dir();
  static const int kDirFieldNumber = 1;
  ::google::protobuf::int64 dir() const;
  void set_dir(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:helloworld.HelloOpendir)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 dir_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_helloworld_2eproto();
  friend void protobuf_AssignDesc_helloworld_2eproto();
  friend void protobuf_ShutdownFile_helloworld_2eproto();

  void InitAsDefaultInstance();
  static HelloOpendir* default_instance_;
};
// -------------------------------------------------------------------

class HelloDirent : public ::google::protobuf::Message {
 public:
  HelloDirent();
  virtual ~HelloDirent();

  HelloDirent(const HelloDirent& from);

  inline HelloDirent& operator=(const HelloDirent& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HelloDirent& default_instance();

  void Swap(HelloDirent* other);

  // implements Message ----------------------------------------------

  inline HelloDirent* New() const { return New(NULL); }

  HelloDirent* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HelloDirent& from);
  void MergeFrom(const HelloDirent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HelloDirent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 ino = 1;
  void clear_ino();
  static const int kInoFieldNumber = 1;
  ::google::protobuf::uint64 ino() const;
  void set_ino(::google::protobuf::uint64 value);

  // optional string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:helloworld.HelloDirent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 ino_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_helloworld_2eproto();
  friend void protobuf_AssignDesc_helloworld_2eproto();
  friend void protobuf_ShutdownFile_helloworld_2eproto();

  void InitAsDefaultInstance();
  static HelloDirent* default_instance_;
};
// -------------------------------------------------------------------

class HelloMkdirReply : public ::google::protobuf::Message {
 public:
  HelloMkdirReply();
  virtual ~HelloMkdirReply();

  HelloMkdirReply(const HelloMkdirReply& from);

  inline HelloMkdirReply& operator=(const HelloMkdirReply& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HelloMkdirReply& default_instance();

  void Swap(HelloMkdirReply* other);

  // implements Message ----------------------------------------------

  inline HelloMkdirReply* New() const { return New(NULL); }

  HelloMkdirReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HelloMkdirReply& from);
  void MergeFrom(const HelloMkdirReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HelloMkdirReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ret = 1;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::google::protobuf::uint32 ret() const;
  void set_ret(::google::protobuf::uint32 value);

  // optional uint32 err = 2;
  void clear_err();
  static const int kErrFieldNumber = 2;
  ::google::protobuf::uint32 err() const;
  void set_err(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:helloworld.HelloMkdirReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 ret_;
  ::google::protobuf::uint32 err_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_helloworld_2eproto();
  friend void protobuf_AssignDesc_helloworld_2eproto();
  friend void protobuf_ShutdownFile_helloworld_2eproto();

  void InitAsDefaultInstance();
  static HelloMkdirReply* default_instance_;
};
// -------------------------------------------------------------------

class HelloMknodRequest : public ::google::protobuf::Message {
 public:
  HelloMknodRequest();
  virtual ~HelloMknodRequest();

  HelloMknodRequest(const HelloMknodRequest& from);

  inline HelloMknodRequest& operator=(const HelloMknodRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HelloMknodRequest& default_instance();

  void Swap(HelloMknodRequest* other);

  // implements Message ----------------------------------------------

  inline HelloMknodRequest* New() const { return New(NULL); }

  HelloMknodRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HelloMknodRequest& from);
  void MergeFrom(const HelloMknodRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HelloMknodRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // optional uint32 mode = 2;
  void clear_mode();
  static const int kModeFieldNumber = 2;
  ::google::protobuf::uint32 mode() const;
  void set_mode(::google::protobuf::uint32 value);

  // optional uint32 dev = 3;
  void clear_dev();
  static const int kDevFieldNumber = 3;
  ::google::protobuf::uint32 dev() const;
  void set_dev(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:helloworld.HelloMknodRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::uint32 mode_;
  ::google::protobuf::uint32 dev_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_helloworld_2eproto();
  friend void protobuf_AssignDesc_helloworld_2eproto();
  friend void protobuf_ShutdownFile_helloworld_2eproto();

  void InitAsDefaultInstance();
  static HelloMknodRequest* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// HelloRequest

// optional string name = 1;
inline void HelloRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HelloRequest::name() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HelloRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.HelloRequest.name)
}
inline void HelloRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.HelloRequest.name)
}
inline void HelloRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.HelloRequest.name)
}
inline ::std::string* HelloRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.HelloRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HelloRequest::release_name() {
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HelloRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:helloworld.HelloRequest.name)
}

// -------------------------------------------------------------------

// HelloReply

// optional string message = 1;
inline void HelloReply::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HelloReply::message() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloReply.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HelloReply::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.HelloReply.message)
}
inline void HelloReply::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.HelloReply.message)
}
inline void HelloReply::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.HelloReply.message)
}
inline ::std::string* HelloReply::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.HelloReply.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HelloReply::release_message() {
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HelloReply::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:helloworld.HelloReply.message)
}

// -------------------------------------------------------------------

// HelloFlushRequest

// optional string path = 1;
inline void HelloFlushRequest::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HelloFlushRequest::path() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloFlushRequest.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HelloFlushRequest::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.HelloFlushRequest.path)
}
inline void HelloFlushRequest::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.HelloFlushRequest.path)
}
inline void HelloFlushRequest::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.HelloFlushRequest.path)
}
inline ::std::string* HelloFlushRequest::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.HelloFlushRequest.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HelloFlushRequest::release_path() {
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HelloFlushRequest::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:helloworld.HelloFlushRequest.path)
}

// optional string content = 2;
inline void HelloFlushRequest::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HelloFlushRequest::content() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloFlushRequest.content)
  return content_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HelloFlushRequest::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.HelloFlushRequest.content)
}
inline void HelloFlushRequest::set_content(const char* value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.HelloFlushRequest.content)
}
inline void HelloFlushRequest::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.HelloFlushRequest.content)
}
inline ::std::string* HelloFlushRequest::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.HelloFlushRequest.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HelloFlushRequest::release_content() {
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HelloFlushRequest::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:helloworld.HelloFlushRequest.content)
}

// -------------------------------------------------------------------

// HelloStat

// optional sfixed64 dev = 1;
inline void HelloStat::clear_dev() {
  dev_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 HelloStat::dev() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloStat.dev)
  return dev_;
}
inline void HelloStat::set_dev(::google::protobuf::int64 value) {
  
  dev_ = value;
  // @@protoc_insertion_point(field_set:helloworld.HelloStat.dev)
}

// optional sfixed64 ino = 2;
inline void HelloStat::clear_ino() {
  ino_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 HelloStat::ino() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloStat.ino)
  return ino_;
}
inline void HelloStat::set_ino(::google::protobuf::int64 value) {
  
  ino_ = value;
  // @@protoc_insertion_point(field_set:helloworld.HelloStat.ino)
}

// optional int32 mode = 3;
inline void HelloStat::clear_mode() {
  mode_ = 0;
}
inline ::google::protobuf::int32 HelloStat::mode() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloStat.mode)
  return mode_;
}
inline void HelloStat::set_mode(::google::protobuf::int32 value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:helloworld.HelloStat.mode)
}

// optional sfixed64 nlink = 4;
inline void HelloStat::clear_nlink() {
  nlink_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 HelloStat::nlink() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloStat.nlink)
  return nlink_;
}
inline void HelloStat::set_nlink(::google::protobuf::int64 value) {
  
  nlink_ = value;
  // @@protoc_insertion_point(field_set:helloworld.HelloStat.nlink)
}

// optional int32 uid = 5;
inline void HelloStat::clear_uid() {
  uid_ = 0;
}
inline ::google::protobuf::int32 HelloStat::uid() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloStat.uid)
  return uid_;
}
inline void HelloStat::set_uid(::google::protobuf::int32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:helloworld.HelloStat.uid)
}

// optional int32 gid = 6;
inline void HelloStat::clear_gid() {
  gid_ = 0;
}
inline ::google::protobuf::int32 HelloStat::gid() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloStat.gid)
  return gid_;
}
inline void HelloStat::set_gid(::google::protobuf::int32 value) {
  
  gid_ = value;
  // @@protoc_insertion_point(field_set:helloworld.HelloStat.gid)
}

// optional sfixed64 rdev = 7;
inline void HelloStat::clear_rdev() {
  rdev_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 HelloStat::rdev() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloStat.rdev)
  return rdev_;
}
inline void HelloStat::set_rdev(::google::protobuf::int64 value) {
  
  rdev_ = value;
  // @@protoc_insertion_point(field_set:helloworld.HelloStat.rdev)
}

// optional sfixed64 size = 8;
inline void HelloStat::clear_size() {
  size_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 HelloStat::size() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloStat.size)
  return size_;
}
inline void HelloStat::set_size(::google::protobuf::int64 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:helloworld.HelloStat.size)
}

// optional sfixed64 atime = 9;
inline void HelloStat::clear_atime() {
  atime_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 HelloStat::atime() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloStat.atime)
  return atime_;
}
inline void HelloStat::set_atime(::google::protobuf::int64 value) {
  
  atime_ = value;
  // @@protoc_insertion_point(field_set:helloworld.HelloStat.atime)
}

// optional sfixed64 mtime = 10;
inline void HelloStat::clear_mtime() {
  mtime_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 HelloStat::mtime() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloStat.mtime)
  return mtime_;
}
inline void HelloStat::set_mtime(::google::protobuf::int64 value) {
  
  mtime_ = value;
  // @@protoc_insertion_point(field_set:helloworld.HelloStat.mtime)
}

// optional sfixed64 ctime = 11;
inline void HelloStat::clear_ctime() {
  ctime_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 HelloStat::ctime() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloStat.ctime)
  return ctime_;
}
inline void HelloStat::set_ctime(::google::protobuf::int64 value) {
  
  ctime_ = value;
  // @@protoc_insertion_point(field_set:helloworld.HelloStat.ctime)
}

// optional sfixed64 blksize = 12;
inline void HelloStat::clear_blksize() {
  blksize_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 HelloStat::blksize() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloStat.blksize)
  return blksize_;
}
inline void HelloStat::set_blksize(::google::protobuf::int64 value) {
  
  blksize_ = value;
  // @@protoc_insertion_point(field_set:helloworld.HelloStat.blksize)
}

// optional sfixed64 blocks = 13;
inline void HelloStat::clear_blocks() {
  blocks_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 HelloStat::blocks() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloStat.blocks)
  return blocks_;
}
inline void HelloStat::set_blocks(::google::protobuf::int64 value) {
  
  blocks_ = value;
  // @@protoc_insertion_point(field_set:helloworld.HelloStat.blocks)
}

// optional uint32 flag = 14;
inline void HelloStat::clear_flag() {
  flag_ = 0u;
}
inline ::google::protobuf::uint32 HelloStat::flag() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloStat.flag)
  return flag_;
}
inline void HelloStat::set_flag(::google::protobuf::uint32 value) {
  
  flag_ = value;
  // @@protoc_insertion_point(field_set:helloworld.HelloStat.flag)
}

// optional uint32 err = 15;
inline void HelloStat::clear_err() {
  err_ = 0u;
}
inline ::google::protobuf::uint32 HelloStat::err() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloStat.err)
  return err_;
}
inline void HelloStat::set_err(::google::protobuf::uint32 value) {
  
  err_ = value;
  // @@protoc_insertion_point(field_set:helloworld.HelloStat.err)
}

// -------------------------------------------------------------------

// HelloDir

// optional uint64 fh = 1;
inline void HelloDir::clear_fh() {
  fh_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 HelloDir::fh() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloDir.fh)
  return fh_;
}
inline void HelloDir::set_fh(::google::protobuf::uint64 value) {
  
  fh_ = value;
  // @@protoc_insertion_point(field_set:helloworld.HelloDir.fh)
}

// -------------------------------------------------------------------

// HelloOpendir

// optional int64 dir = 1;
inline void HelloOpendir::clear_dir() {
  dir_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 HelloOpendir::dir() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloOpendir.dir)
  return dir_;
}
inline void HelloOpendir::set_dir(::google::protobuf::int64 value) {
  
  dir_ = value;
  // @@protoc_insertion_point(field_set:helloworld.HelloOpendir.dir)
}

// -------------------------------------------------------------------

// HelloDirent

// optional uint64 ino = 1;
inline void HelloDirent::clear_ino() {
  ino_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 HelloDirent::ino() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloDirent.ino)
  return ino_;
}
inline void HelloDirent::set_ino(::google::protobuf::uint64 value) {
  
  ino_ = value;
  // @@protoc_insertion_point(field_set:helloworld.HelloDirent.ino)
}

// optional string name = 2;
inline void HelloDirent::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HelloDirent::name() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloDirent.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HelloDirent::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.HelloDirent.name)
}
inline void HelloDirent::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.HelloDirent.name)
}
inline void HelloDirent::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.HelloDirent.name)
}
inline ::std::string* HelloDirent::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.HelloDirent.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HelloDirent::release_name() {
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HelloDirent::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:helloworld.HelloDirent.name)
}

// -------------------------------------------------------------------

// HelloMkdirReply

// optional uint32 ret = 1;
inline void HelloMkdirReply::clear_ret() {
  ret_ = 0u;
}
inline ::google::protobuf::uint32 HelloMkdirReply::ret() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloMkdirReply.ret)
  return ret_;
}
inline void HelloMkdirReply::set_ret(::google::protobuf::uint32 value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:helloworld.HelloMkdirReply.ret)
}

// optional uint32 err = 2;
inline void HelloMkdirReply::clear_err() {
  err_ = 0u;
}
inline ::google::protobuf::uint32 HelloMkdirReply::err() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloMkdirReply.err)
  return err_;
}
inline void HelloMkdirReply::set_err(::google::protobuf::uint32 value) {
  
  err_ = value;
  // @@protoc_insertion_point(field_set:helloworld.HelloMkdirReply.err)
}

// -------------------------------------------------------------------

// HelloMknodRequest

// optional string path = 1;
inline void HelloMknodRequest::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HelloMknodRequest::path() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloMknodRequest.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HelloMknodRequest::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.HelloMknodRequest.path)
}
inline void HelloMknodRequest::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.HelloMknodRequest.path)
}
inline void HelloMknodRequest::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.HelloMknodRequest.path)
}
inline ::std::string* HelloMknodRequest::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.HelloMknodRequest.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HelloMknodRequest::release_path() {
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HelloMknodRequest::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:helloworld.HelloMknodRequest.path)
}

// optional uint32 mode = 2;
inline void HelloMknodRequest::clear_mode() {
  mode_ = 0u;
}
inline ::google::protobuf::uint32 HelloMknodRequest::mode() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloMknodRequest.mode)
  return mode_;
}
inline void HelloMknodRequest::set_mode(::google::protobuf::uint32 value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:helloworld.HelloMknodRequest.mode)
}

// optional uint32 dev = 3;
inline void HelloMknodRequest::clear_dev() {
  dev_ = 0u;
}
inline ::google::protobuf::uint32 HelloMknodRequest::dev() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloMknodRequest.dev)
  return dev_;
}
inline void HelloMknodRequest::set_dev(::google::protobuf::uint32 value) {
  
  dev_ = value;
  // @@protoc_insertion_point(field_set:helloworld.HelloMknodRequest.dev)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace helloworld

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_helloworld_2eproto__INCLUDED
